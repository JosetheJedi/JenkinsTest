pipeline 
{
    agent any

    options {
        disableConcurrentBuilds()
        skipDefaultCheckout()
    }

    triggers { upstream(upstreamProjects: 'MyProjectSCM', threshold: hudson.model.Result.SUCCESS) }

    stages 
    {
        stage("Build")
        {
            steps
            {
                lock('MyProjectSCM') 
            {
                
                sh '''
                    echo "Building project"
                    ls ..
                    ls ../MyProjectSCM
                    g++ -isystem ../MyProjectSCM/gcc-test/googletest/googletest/include/ -I../MyProjectSCM/gcc-test/googletest/googletest/ -pthread -c ../MyProjectSCM/gcc-test/googletest/googletest/src/gtest-all.cc ../MyProjectSCM/gcc-test/googletest/googletest/src/gtest_main.cc

                    ar -rv ../MyProjectSCM/gcc-test/googletest/googletest/gtest_main.a gtest_main.o gtest-all.o

                    echo "Building Project"

                    cd ../MyProjectSCM/gcc-test/build

                    g++ -isystem ../googletest/googletest/include/ -pthread ../Example.cpp ../test/ExampleTests.cpp ../test/ExampleTests2.cpp ../googletest/googletest/gtest_main.a -o ExampleTests
                '''
                
            }
            }
        }
        stage("Run Google Test")
        {
            steps{
                sh '''
                    echo "Starting google test"
                    ../MyProjectSCM/gcc-test/build/ExampleTests --gtest_output="xml:testresults.xml"
                '''
            }
        }
    }
    
}